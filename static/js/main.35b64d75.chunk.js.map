{"version":3,"sources":["components/Navigation/Navigation.tsx","components/Loader/Loader.tsx","components/PeopleTable/PeopleTable.tsx","api.ts","components/MessageMenu/MessageMenu.tsx","App.tsx","index.tsx"],"names":["Navigation","location","useLocation","className","role","cn","pathname","to","includes","Loader","PeopleTable","person","isLoading","slug","useParams","map","personItem","sex","name","born","died","some","filterName","motherName","find","p","fatherName","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","MessageMenu","error","length","App","useState","setPerson","setIsLoading","setError","useEffect","people","catch","finally","path","element","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.35b64d75.chunk.js","sourcesContent":["import cn from 'classnames';\nimport { Link, useLocation } from 'react-router-dom';\n\nexport const Navigation = () => {\n  const location = useLocation();\n\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <Link\n            className={cn('navbar-item',\n              { 'has-background-grey-lighter': location.pathname === '/' })}\n            to=\"/\"\n          >\n            Home\n          </Link>\n\n          <Link\n            className={cn('navbar-item',\n              {\n                'has-background-grey-lighter':\n                location.pathname.includes('/people'),\n              })}\n            to=\"/people\"\n          >\n            People\n          </Link>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Link, useParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Person } from '../../types';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  person: Person[]\n  isLoading: boolean\n};\nexport const PeopleTable: React.FC<Props> = ({ person, isLoading }) => {\n  const { slug } = useParams();\n\n  return isLoading ? <Loader /> : (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <table\n        data-cy=\"peopleTable\"\n        className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n      >\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Sex</th>\n            <th>Born</th>\n            <th>Died</th>\n            <th>Mother</th>\n            <th>Father</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {person.map(personItem => (\n            <tr\n              key={personItem.slug}\n              data-cy=\"person\"\n              className={cn(\n                { 'has-background-warning': personItem.slug === slug },\n              )}\n            >\n              <td>\n                <Link\n                  className={cn({ 'has-text-danger': personItem.sex === 'f' })}\n                  to={`/people/${personItem.slug}`}\n                >\n                  {personItem.name}\n                </Link>\n              </td>\n\n              <td>{personItem.sex}</td>\n              <td>{personItem.born}</td>\n              <td>{personItem.died}</td>\n              <td>\n                {person.some(\n                  filterName => filterName.name === personItem.motherName,\n                ) ? <Link className=\"has-text-danger\" to={`/people/${person.find(p => p.name === personItem.motherName)?.slug}`}>{personItem.motherName}</Link> : (\n                    personItem.motherName || '-'\n                  )}\n              </td>\n              <td>\n                {person.some(\n                  filterName => filterName.name === personItem.fatherName,\n                ) ? <Link to={`/people/${person.find(p => p.name === personItem.fatherName)?.slug}`}>{personItem.fatherName}</Link> : (\n                    personItem.fatherName || '-'\n                  )}\n              </td>\n            </tr>\n          ))}\n\n        </tbody>\n      </table>\n    </>\n  );\n};\n\nexport default PeopleTable;\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { Person } from '../../types';\n\ntype Props = {\n  person: Person[]\n  isLoading: boolean\n  error: string\n};\n\nexport const MessageMenu: React.FC<Props> = ({ person, isLoading, error }) => {\n  return !person.length && !isLoading ? (\n    <div className=\"block\">\n      <div className=\"box table-container\">\n        { error && (\n          <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n            {error}\n          </p>\n        )}\n        { !person.length && !isLoading && (\n          <p data-cy=\"noPeopleMessage\">\n            There are no people on the server\n          </p>\n        )}\n      </div>\n    </div>\n  ) : null;\n};\n\nexport default MessageMenu;\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport './App.scss';\nimport { Navigation } from './components/Navigation/Navigation';\nimport { PeopleTable } from './components/PeopleTable/PeopleTable';\nimport { Person } from './types';\nimport { getPeople } from './api';\nimport { MessageMenu } from './components/MessageMenu/MessageMenu';\n\nexport const App: React.FC = () => {\n  const [person, setPerson] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    getPeople()\n      .then((people) => {\n        setPerson(people);\n      })\n      .catch(() => setError('Something went wrong'))\n      .finally(() => setIsLoading(false));\n  }, [setPerson, setIsLoading]);\n\n  return (\n    <div data-cy=\"app\">\n      <Navigation />\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\" element={<h1 className=\"title\">Home Page</h1>} />\n            <Route path=\"/home\" element={<Navigate to=\"/\" />} />\n            <Route path=\"people\">\n              <Route\n                index\n                element={<PeopleTable person={person} isLoading={isLoading} />}\n              />\n              <Route\n                path=\"/people/:slug\"\n                element={<PeopleTable person={person} isLoading={isLoading} />}\n              />\n            </Route>\n            <Route\n              path=\"*\"\n              element={<h1 className=\"title\">Page not found</h1>}\n            />\n          </Routes>\n          {!isLoading && (\n            <MessageMenu\n              person={person}\n              isLoading={isLoading}\n              error={error}\n            />\n          )}\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}